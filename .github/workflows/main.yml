name: "Test"

on:
  push:
    paths-ignore:
      - "docs/**"
  pull_request:
    paths-ignore:
      - "docs/**"
  schedule:
    - cron: '40 1 * * 3'


jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python
        run: uv python install 3.13
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: uv pip install -e '.[dev]'
      - name: Run ruff check
        run: uv run ruff check
      - name: Run ruff format
        run: uv run ruff format --check

  test:
    name: test-python${{ matrix.python-version }}-sa${{ matrix.sqlalchemy-version }}-${{ matrix.db-engine }}
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        sqlalchemy-version:
          - ">=1.4,<2.0"
          - ">=2.0"
        db-engine:
          - sqlite
          - postgres
          - postgres-native
          - mysql
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: main
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: main
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          uv pip install 'sqlalchemy${{ matrix.sqlalchemy-version }}'
          uv pip install -e '.[test]'
      - name: Run tests
        run: uv run pytest
        env:
          DB: ${{ matrix.db-engine }}
