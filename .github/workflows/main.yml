name: "Test"

on:
  push:
    paths-ignore:
      - "docs/**"
  pull_request:
    paths-ignore:
      - "docs/**"
  schedule:
    - cron: '40 1 * * 3'


jobs:
  test:
    name: test-python${{ matrix.python-version }}-sa${{ matrix.sqlalchemy-version }}-${{ matrix.db-engine }}
    strategy:
      matrix:
        python-version:
#          - "2.7"
#          - "3.4"
#          - "3.5"
#          - "3.6"
#          - "3.7"
          - "3.8"
#          - "3.9"
#          - "3.10"
#          - "pypy-3.7"
        sqlalchemy-version:
          - "<1.4"
          - ">=1.4"
        db-engine:
          - sqlite
          - postgres
          - postgres-native
          - mysql
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: sqlalchemy_continuum_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sqlalchemy_continuum_test
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 2s
          --health-retries 3
    steps:
      - uses: actions/checkout@v1
      - name: Install sqlalchemy
        run: pip3 install 'sqlalchemy${{ matrix.sqlalchemy-version }}'
      - name: Build
        run: pip3 install -e '.[test]'
      - name: Run tests
        run: pytest
        env:
          DB: ${{ matrix.db-engine }}

